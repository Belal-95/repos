//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventReminderService.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EventReminderEntities2 : DbContext
    {
        public EventReminderEntities2()
            : base("name=EventReminderEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblUserAccountDetail> tblUserAccountDetails { get; set; }
        public virtual DbSet<tblUserAddressDetail> tblUserAddressDetails { get; set; }
        public virtual DbSet<tblUserPersonalDetail> tblUserPersonalDetails { get; set; }
        public virtual DbSet<tblBirthdayDetail> tblBirthdayDetails { get; set; }
    
        public virtual int SP_UpdateUserProfile(Nullable<int> userId, string newPassword, Nullable<int> hintQuestionId, string newHintQuestion, string hintQuestionAnswer, string firstName, string middleName, string lastName, string nickeName, string dateOfBirth, string anniversaryDate, string gender, Nullable<bool> isAgeSecret, string mobileNo, string userPhoto, string addressLine1, Nullable<int> countryId, Nullable<int> stateId, Nullable<int> cityId, string pinCode)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var hintQuestionIdParameter = hintQuestionId.HasValue ?
                new ObjectParameter("HintQuestionId", hintQuestionId) :
                new ObjectParameter("HintQuestionId", typeof(int));
    
            var newHintQuestionParameter = newHintQuestion != null ?
                new ObjectParameter("NewHintQuestion", newHintQuestion) :
                new ObjectParameter("NewHintQuestion", typeof(string));
    
            var hintQuestionAnswerParameter = hintQuestionAnswer != null ?
                new ObjectParameter("HintQuestionAnswer", hintQuestionAnswer) :
                new ObjectParameter("HintQuestionAnswer", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var nickeNameParameter = nickeName != null ?
                new ObjectParameter("NickeName", nickeName) :
                new ObjectParameter("NickeName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth != null ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(string));
    
            var anniversaryDateParameter = anniversaryDate != null ?
                new ObjectParameter("AnniversaryDate", anniversaryDate) :
                new ObjectParameter("AnniversaryDate", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var isAgeSecretParameter = isAgeSecret.HasValue ?
                new ObjectParameter("IsAgeSecret", isAgeSecret) :
                new ObjectParameter("IsAgeSecret", typeof(bool));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var userPhotoParameter = userPhoto != null ?
                new ObjectParameter("UserPhoto", userPhoto) :
                new ObjectParameter("UserPhoto", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var pinCodeParameter = pinCode != null ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateUserProfile", userIdParameter, newPasswordParameter, hintQuestionIdParameter, newHintQuestionParameter, hintQuestionAnswerParameter, firstNameParameter, middleNameParameter, lastNameParameter, nickeNameParameter, dateOfBirthParameter, anniversaryDateParameter, genderParameter, isAgeSecretParameter, mobileNoParameter, userPhotoParameter, addressLine1Parameter, countryIdParameter, stateIdParameter, cityIdParameter, pinCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckEmailAvailibility(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckEmailAvailibility", emailIdParameter);
        }
    
        public virtual int SP_UserRegistration(string emailId, string password, Nullable<System.DateTime> dateOfRegistration, Nullable<bool> isApproved, Nullable<bool> isCancelled, string firstName, string middleName, string lastName, string dateOfBirth, string gender, Nullable<bool> isAgeSecret, string mobileNo)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var dateOfRegistrationParameter = dateOfRegistration.HasValue ?
                new ObjectParameter("DateOfRegistration", dateOfRegistration) :
                new ObjectParameter("DateOfRegistration", typeof(System.DateTime));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var isCancelledParameter = isCancelled.HasValue ?
                new ObjectParameter("IsCancelled", isCancelled) :
                new ObjectParameter("IsCancelled", typeof(bool));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth != null ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var isAgeSecretParameter = isAgeSecret.HasValue ?
                new ObjectParameter("IsAgeSecret", isAgeSecret) :
                new ObjectParameter("IsAgeSecret", typeof(bool));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UserRegistration", emailIdParameter, passwordParameter, dateOfRegistrationParameter, isApprovedParameter, isCancelledParameter, firstNameParameter, middleNameParameter, lastNameParameter, dateOfBirthParameter, genderParameter, isAgeSecretParameter, mobileNoParameter);
        }
    
        public virtual int SP_UserApproval(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UserApproval", emailIdParameter);
        }
    
        public virtual ObjectResult<SP_GetHintQuestion_Result> SP_GetHintQuestion(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHintQuestion_Result>("SP_GetHintQuestion", emailIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckUserByEmailAnswer(string emailId, string answer)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckUserByEmailAnswer", emailIdParameter, answerParameter);
        }
    
        public virtual int SP_UpdatPasswordByEmail(string emailId, string passwor)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passworParameter = passwor != null ?
                new ObjectParameter("Passwor", passwor) :
                new ObjectParameter("Passwor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdatPasswordByEmail", emailIdParameter, passworParameter);
        }
    
        public virtual ObjectResult<tblUserAccountDetail> SP_CheckUserLogin(string emailId, string password)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblUserAccountDetail>("SP_CheckUserLogin", emailIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<tblUserAccountDetail> SP_CheckUserLogin(string emailId, string password, MergeOption mergeOption)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblUserAccountDetail>("SP_CheckUserLogin", mergeOption, emailIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckUserAccountStatus(string emailId, Nullable<int> status)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckUserAccountStatus", emailIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_BindRelationship_Result> SP_BindRelationship()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BindRelationship_Result>("SP_BindRelationship");
        }
    }
}
