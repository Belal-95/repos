//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CvMakerWebsiteApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CvMakerDBEntities : DbContext
    {
        public CvMakerDBEntities()
            : base("name=CvMakerDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblUserAccountDetail> tblUserAccountDetails { get; set; }
        public virtual DbSet<tblUserPersonalDetail> tblUserPersonalDetails { get; set; }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckEmailAvailibility(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckEmailAvailibility", emailIdParameter);
        }

        public virtual int SP_UserRegistration(string emailId, string password, Nullable<System.DateTime> dateOfRegistration, Nullable<bool> isApproved,  string fullName)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));

            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));

            var dateOfRegistrationParameter = dateOfRegistration.HasValue ?
                new ObjectParameter("DateOfRegistration", dateOfRegistration) :
                new ObjectParameter("DateOfRegistration", typeof(System.DateTime));

            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));

           
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));

            

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UserRegistration", emailIdParameter, passwordParameter, dateOfRegistrationParameter, isApprovedParameter, fullNameParameter);
        }
    }
}
