//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CvMakerWebsiteApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CvMakerDBEntities1 : DbContext
    {
        public CvMakerDBEntities1()
            : base("name=CvMakerDBEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblCvBasicInformation> tblCvBasicInformations { get; set; }
        public virtual DbSet<tblEducationDetail> tblEducationDetails { get; set; }
        public virtual DbSet<tblObjective> tblObjectives { get; set; }
        public virtual DbSet<tblQualification> tblQualifications { get; set; }
        public virtual DbSet<tblUserAccountDetail> tblUserAccountDetails { get; set; }
        public virtual DbSet<tblUserCvDetail> tblUserCvDetails { get; set; }
        public virtual DbSet<tblUserPersonalDetail> tblUserPersonalDetails { get; set; }
        public virtual DbSet<tblWorkExperienceDetail> tblWorkExperienceDetails { get; set; }
        public virtual DbSet<tblInterestDetail> tblInterestDetails { get; set; }
        public virtual DbSet<tblReferencesDetail> tblReferencesDetails { get; set; }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckEmailAvailibility(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckEmailAvailibility", emailIdParameter);
        }
    
        public virtual int SP_UserRegistration(string emailId, string password, Nullable<System.DateTime> dateOfRegistration, Nullable<bool> isApproved, string fullName)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var dateOfRegistrationParameter = dateOfRegistration.HasValue ?
                new ObjectParameter("DateOfRegistration", dateOfRegistration) :
                new ObjectParameter("DateOfRegistration", typeof(System.DateTime));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UserRegistration", emailIdParameter, passwordParameter, dateOfRegistrationParameter, isApprovedParameter, fullNameParameter);
        }
    
        public virtual int SP_UserApproval(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UserApproval", emailIdParameter);
        }
    
        public virtual ObjectResult<tblUserAccountDetail> SP_CheckUserLogin(string emailId, string password)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblUserAccountDetail>("SP_CheckUserLogin", emailIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<tblUserAccountDetail> SP_CheckUserLogin(string emailId, string password, MergeOption mergeOption)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblUserAccountDetail>("SP_CheckUserLogin", mergeOption, emailIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckUserAccountStatus(string emailId, Nullable<int> status)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckUserAccountStatus", emailIdParameter, statusParameter);
        }
    
        public virtual int SP_UpdatPasswordByEmail(string emailId, string password)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdatPasswordByEmail", emailIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckUserByEmailAnswer(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckUserByEmailAnswer", emailIdParameter);
        }
    
        public virtual ObjectResult<SP_GetCvUserDetailsByUserId_Result1> SP_GetCvUserDetailsByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCvUserDetailsByUserId_Result1>("SP_GetCvUserDetailsByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<SP_GetSingleCvDetailsByUserIdAndCvId_Result> SP_GetSingleCvDetailsByUserIdAndCvId(Nullable<int> userId, Nullable<int> cvId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSingleCvDetailsByUserIdAndCvId_Result>("SP_GetSingleCvDetailsByUserIdAndCvId", userIdParameter, cvIdParameter);
        }
    
        public virtual ObjectResult<SP_GetCvBasicInformationByCvId_Result> SP_GetCvBasicInformationByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCvBasicInformationByCvId_Result>("SP_GetCvBasicInformationByCvId", cvIdParameter);
        }
    
        public virtual ObjectResult<SP_GetCvEducationDetailsByCvId_Result> SP_GetCvEducationDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCvEducationDetailsByCvId_Result>("SP_GetCvEducationDetailsByCvId", cvIdParameter);
        }
    
        public virtual ObjectResult<SP_GetCvInterestDetailsByCvId_Result> SP_GetCvInterestDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCvInterestDetailsByCvId_Result>("SP_GetCvInterestDetailsByCvId", cvIdParameter);
        }
    
        public virtual ObjectResult<SP_GetCvObjectiveDetailsByCvId_Result> SP_GetCvObjectiveDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCvObjectiveDetailsByCvId_Result>("SP_GetCvObjectiveDetailsByCvId", cvIdParameter);
        }
    
        public virtual ObjectResult<SP_GetCvQualificationDetailsByCvId_Result> SP_GetCvQualificationDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCvQualificationDetailsByCvId_Result>("SP_GetCvQualificationDetailsByCvId", cvIdParameter);
        }
    
        public virtual ObjectResult<SP_GetCvReferencesDetailsByCvId_Result> SP_GetCvReferencesDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCvReferencesDetailsByCvId_Result>("SP_GetCvReferencesDetailsByCvId", cvIdParameter);
        }
    
        public virtual ObjectResult<SP_GetCvWorkExperienceDetailsByCvId_Result> SP_GetCvWorkExperienceDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCvWorkExperienceDetailsByCvId_Result>("SP_GetCvWorkExperienceDetailsByCvId", cvIdParameter);
        }
    
        public virtual int SP_DeleteCvBasicInformationByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCvBasicInformationByCvId", cvIdParameter);
        }
    
        public virtual int SP_DeleteCvEducationDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCvEducationDetailsByCvId", cvIdParameter);
        }
    
        public virtual int SP_DeleteCvInterestDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCvInterestDetailsByCvId", cvIdParameter);
        }
    
        public virtual int SP_DeleteCvObjectiveDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCvObjectiveDetailsByCvId", cvIdParameter);
        }
    
        public virtual int SP_DeleteCvQualificationsDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCvQualificationsDetailsByCvId", cvIdParameter);
        }
    
        public virtual int SP_DeleteCvReferencesDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCvReferencesDetailsByCvId", cvIdParameter);
        }
    
        public virtual int SP_DeleteCvWorkExperienceDetailsByCvId(Nullable<int> cvId)
        {
            var cvIdParameter = cvId.HasValue ?
                new ObjectParameter("CvId", cvId) :
                new ObjectParameter("CvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCvWorkExperienceDetailsByCvId", cvIdParameter);
        }
    }
}
